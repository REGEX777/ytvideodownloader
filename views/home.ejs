<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        #progress-bar {
            display: none;
            background-color: #3b82f6;
            height: 4px;
            width: 0;
            transition: width 0.4s ease;
        }
        .spinner {
            border: 4px solid #f3f3f3;
            border-radius: 50%;
            border-top: 4px solid #3b82f6;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">
    <div class="container mx-auto mt-10">
        <div class="text-center mb-8">
            <h1 class="text-5xl font-extrabold text-blue-600">YouTube Downloader</h1>
            <p class="text-lg text-gray-600 mt-4">Download videos in your preferred format!</p>
        </div>
        <div class="w-full max-w-lg mx-auto bg-white shadow-lg rounded-lg p-8">
            <form id="download-form">
                <div class="mb-6">
                    <label for="url" class="block text-lg font-medium text-gray-700">YouTube Video URL</label>
                    <input type="text" id="url" name="url" class="mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-md" placeholder="Paste the video link here" required>
                </div>
                <button type="button" id="fetch-formats" class="w-full bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 transition duration-300 text-lg font-medium">Fetch Video Formats</button>
                <div id="quality-select" class="mt-6 hidden">
                    <label for="format" class="block text-lg font-medium text-gray-700">Select Format</label>
                    <select id="format" name="format" class="mt-2 block w-full px-4 py-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-md"></select>
                    <button type="submit" class="mt-6 w-full bg-green-600 text-white py-3 px-6 rounded-md hover:bg-green-700 transition duration-300 text-lg font-medium">Download</button>
                </div>
            </form>
            <div id="progress-bar" class="mt-4 rounded-md"></div>
        </div>
    </div>
    <script>
        const fetchFormatsBtn = document.getElementById('fetch-formats');
        const qualitySelect = document.getElementById('quality-select');
        const formatDropdown = document.getElementById('format');
        const progressBar = document.getElementById('progress-bar');

        fetchFormatsBtn.addEventListener('click', async () => {
            const videoURL = document.getElementById('url').value;
            progressBar.style.display = 'block';
            progressBar.style.width = '50%';
            const response = await fetch(`/api/youtube/download/formats?url=${encodeURIComponent(videoURL)}`);
            const formats = await response.json();

            if (formats.length > 0) {
                formatDropdown.innerHTML = formats.map(format => `
                    <option value="${format.itag}">
                        ${format.quality} - ${format.mimeType} - ${format.size}
                    </option>
                `).join('');
                qualitySelect.classList.remove('hidden');
                progressBar.style.width = '100%';
                setTimeout(() => { progressBar.style.display = 'none'; }, 1000); // make the progress bar go away after it reacher 100%
            }
        });

        document.getElementById('download-form').addEventListener('submit', (event) => {
            event.preventDefault();
            const videoURL = document.getElementById('url').value;
            const selectedItag = formatDropdown.value;
            progressBar.style.width = '0%';
            progressBar.style.display = 'block';

            fetch(`/api/youtube/download/video?url=${encodeURIComponent(videoURL)}&itag=${selectedItag}`, {
                method: 'GET'
            }).then(response => {
                if (response.ok) {
                    progressBar.style.width = '100%';
                    response.blob().then(blob => {  // turn the reposne into a blob (kinda like a file)
                        const url = window.URL.createObjectURL(blob);  
                        const a = document.createElement('a');
                        a.style.display = 'none';
                        a.href = url;
                        a.download = `${sanitizeFileName(videoURL)}.mp4`; // pls set the downloadfile name which is related to video url just for the match T~T
                        document.body.appendChild(a);
                        a.click();
                        // after all of this is done, this code will hopefully remove the url and save the ram
                        window.URL.revokeObjectURL(url);
                    });
                }
            }).catch(err => {
                console.error('Download failed:', err);
                progressBar.style.display = 'none';
            });
        });

        const sanitizeFileName = (name) => {
            return name.replace(/[\/\\?%*:|"<>]/g, '-');
        }
    </script>
</body>
</html>
